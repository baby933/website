"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[960],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),u=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return o.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(h,l(l({ref:t},s),{},{components:n})):o.createElement(h,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4761:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={},l="Make an outbound call",c={unversionedId:"getting_started/make_an_outbound_call",id:"getting_started/make_an_outbound_call",title:"Make an outbound call",description:"With a single API request you can initiate a phone call using Node.js, from the Fonoster Number.",source:"@site/docs/getting_started/make_an_outbound_call.md",sourceDirName:"getting_started",slug:"/getting_started/make_an_outbound_call",permalink:"/docs/getting_started/make_an_outbound_call",draft:!1,editUrl:"https://github.com/fonoster/website/edit/develop/docs/docs/getting_started/make_an_outbound_call.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Receive and respond to a call",permalink:"/docs/getting_started/receive_and_respond_to_a_call"},next:{title:"Troubleshooting",permalink:"/docs/getting_started/troubleshooting"}},i={},u=[{value:"Replace values with yours",id:"replace-values-with-yours",level:2},{value:"Make an outbound call",id:"make-an-outbound-call-1",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"make-an-outbound-call"},"Make an outbound call"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"With a single API request you can initiate a phone call using Node.js, from the Fonoster Number.")),(0,r.kt)("p",null,"Make a new file ",(0,r.kt)("inlineCode",{parentName:"p"},"call.js")," and paste in the following code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const Fonoster = require("@fonoster/sdk");\nconst callManager = new Fonoster.CallManager({\n  accessKeyId: "PJ619154d081467a0700000001",\n  accessKeySecret: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ25vc3RlciIsInJvbGUiOiJQUk9KRUNUIiwiYWNjZXNz"\n});\n\ncallManager.call({\n from: "+19842753574",\n to: "17853178070",\n webhook: "https://5a2d2ea5d84d.ngrok.io"\n})\n  .then(console.log)\n  .catch(console.error);\n')),(0,r.kt)("h2",{id:"replace-values-with-yours"},"Replace values with yours"),(0,r.kt)("p",null,"This fragment of code starts a phone call between the two phone numbers that we pass as arguments. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"The ",(0,r.kt)("inlineCode",{parentName:"strong"},"from")," number is our Fonoster number, and the 'to' number is who we want to call."))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"webhook")," argument points to a Programmable Voice Application, our previously made ngrok port, which tells Fonoster to handle the call once the recipient answer the call."),(0,r.kt)("p",null,"Remember that Fonoster Number you set up earlier? Go ahead and replace the existing from a number with that one, making sure to use E.164 formatting:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"[+][country code][phone number including area code]")),(0,r.kt)("p",null,"Next, replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"to")," phone number with a mobile or landline phone you have with you."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Make sure to also replace accessKeyId and accessKeySecret with the ones from your account. ")),(0,r.kt)("h2",{id:"make-an-outbound-call-1"},"Make an outbound call"),(0,r.kt)("p",null,"Now we are ready to save the changes and run the code by copying the following command into your terminal: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"node call.js\n")),(0,r.kt)("p",null,"That's it! Your phone should ring with a call from your Fonoster Number, and you'll hear our short message for you."))}p.isMDXComponent=!0}}]);