"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[256],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),g=r,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return t?o.createElement(f,i(i({ref:n},p),{},{components:t})):o.createElement(f,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},930:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const a={},i="Connecting Dialogflow and Fonoster",l={unversionedId:"tutorials/connecting_with_dialogflow",id:"tutorials/connecting_with_dialogflow",title:"Connecting Dialogflow and Fonoster",description:"Rox AI is a connector between Dialogflow and Fonoster.",source:"@site/docs/tutorials/connecting_with_dialogflow.mdx",sourceDirName:"tutorials",slug:"/tutorials/connecting_with_dialogflow",permalink:"/docs/tutorials/connecting_with_dialogflow",draft:!1,editUrl:"https://github.com/fonoster/website/edit/develop/docs/docs/tutorials/connecting_with_dialogflow.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Using Fonoster with Google Speech APIs",permalink:"/docs/tutorials/using_google_speech"},next:{title:"Using the Javascript SDKs",permalink:"/docs/tutorials/using_the_javascript_sdks"}},s={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Overview",id:"overview",level:2},{value:"Preparing the environment",id:"preparing-the-environment",level:2},{value:"Running the Connector",id:"running-the-connector",level:2}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"connecting-dialogflow-and-fonoster"},"Connecting Dialogflow and Fonoster"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/fonoster/rox"},"Rox AI")," is a connector between Dialogflow and Fonoster. "),(0,r.kt)("p",null,"Rox AI is for creating Programmable Voice Applications without having to do any coding."),(0,r.kt)("h2",{id:"requirements"},"Requirements"),(0,r.kt)("p",null,"Before you start this guide, you will need ",(0,r.kt)("strong",{parentName:"p"},"Docker")," and a ",(0,r.kt)("strong",{parentName:"p"},"set of Google Cloud Credentials")," with access to Speech APIs and your Dialogflow project."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"This is the final product of this guide:"),(0,r.kt)("iframe",{width:"100%",height:"300px",src:"https://www.youtube.com/embed/41Rx8KPb5GU",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,r.kt)("h2",{id:"preparing-the-environment"},"Preparing the environment"),(0,r.kt)("p",null,"Rox AI ships as a Docker container, and has everything you need to connect with Dialogflow. All it takes is a few environment variables. "),(0,r.kt)("p",null,"In your favorite IDE open the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file, and then copy and paste the following content:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"// .env\n# Uncomment if you need authentication\n# NGROK_AUTH=\nNGROK_PROTOCOL=http\nNGROK_PORT=rox:3000\nASR_ENGINE=google\nTTS_ENGINE=google\nTTS_VOICE=en-US-Wavenet-F\nINTENTS_ENGINE=dialogflow.es\nCONFIG=.\n")),(0,r.kt)("p",null,"Next, open a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," and paste the content of this YAML."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"version: '3.8'\n\nservices:\n  rox:\n    image: fonoster/rox:latest\n    # Be sure to remove this while in production \n    ports:\n      - 3000:3000\n      - 3001:3001\n    environment:\n      - INTENTS_ENGINE\n      - INTENTS_ENGINE_AGENT\n      - INTENTS_ENGINE_LOCATION\n      - ASR_ENGINE\n      - TTS_ENGINE\n      - TTS_VOICE\n      - INITIAL_DTMF\n      - WELCOME_INTENT_TRIGGER\n      - ACTIVATION_INTENT\n      - INTERACTION_TIMEOUT\n      - EVENTS_ENABLED\n      - ACTIVATION_TIMEOUT\n      - LANGUAGE_CODE  \n    volumes:\n      - ${CONFIG}/google.json:/home/fonoster/.fonoster/google.json\n    networks:\n      - default\n\n  ngrok:\n    image: wernight/ngrok:latest\n    ports:\n      - 4040:4040\n    environment:\n      - NGROK_PROTOCOL\n      - NGROK_PORT\n      - NGROK_AUTH\n    depends_on:\n      - rox\n    networks:\n      - default\n")),(0,r.kt)("p",null,"By now, your folder should look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ tree -a\n.\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 docker-compose.yml\n\u2514\u2500\u2500 google.json\n\n0 directories, 3 files\n")),(0,r.kt)("h2",{id:"running-the-connector"},"Running the Connector"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up\n")),(0,r.kt)("p",null,"You are all set."),(0,r.kt)("p",null,"Look for ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:4040/inspect/http"},"Ngrok's URL"),", and use the value as the Webhook of your Fonoster Number."))}u.isMDXComponent=!0}}]);